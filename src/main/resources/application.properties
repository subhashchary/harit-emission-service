
spring.datasource.driverClassName: org.postgresql.Driver

## AWS - 3CX-SAYA 
spring.datasource.url: jdbc:postgresql://saya-pg-db.cqnvpgkpxb7p.ap-south-1.rds.amazonaws.com:5432/harit-emissions
spring.datasource.username: haritemissionusr
spring.datasource.password: r9~w{X-bVBbFy_D

spring.jpa.hibernate.ddl-auto: update
spring.jpa.generate-ddl: true
spring.jpa.show-sql: false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.datasource.initialization-mode=always
#this was for the exception after JDK17, to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS
spring.jackson.serialization.fail-on-empty-beans=false

#mailSend Configuration params
mailSend.corepoolsize=2
mailSend.maxpoolsize=5
mailSend.queuecapacity=10


## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.testOnBorrow=true
spring.datasource.validationQuery=SELECT 1

server.servlet.context-path=/harit-emission
spring.application.name=harit-emission
server.port=8096
spring.profiles.active=default

saya.openapi.title=HARIT Service API - Powered by SAYA Platform
saya.openapi.description=API to manage HARIT Configuration and User Onboarding Service

# for the issue of spring boot compatibility with swagger
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
#spring.config.import=configserver:http://config:8081

# for rest APIs call memory allotment
spring.codec.max-in-memory-size=1MB

#---
#the vbelow parameter is set false to make the server start with config service
spring.cloud.config.import-check.enabled=false 
#spring.config.activate.on-profile=docker
#spring.config.import=configtree:/run/secrets/

#Saya Send Email using AWS SES
sendmail.uri = https://udi8uf0j1f.execute-api.ap-south-1.amazonaws.com/default

#S4S API related parameters
s4s.uri= http://localhost:8092/s4s

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=1012MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=E:/tmp/harit
file.document-upload-dir=E:/tmp/harit/documents

harit.source.filepath=C:\\Users\\subhash\\Documents\\MyWork\\
sentense.subcategorize.threshold=0.4
sentense.subcategroize.outpath=C:\\Users\\subhash\\Documents\\MyWork\\subcategorywiseSentense
sentense.file-sbd.path=C:\\Users\\subhash\\Documents\\MyWork\\
sentense.subcategroize.governance.fileName=governance.txt
sentense.subcategroize.riskmanagement.fileName=riskmanagement.txt
harit.model.positive.weightage=0.8
harit.model.neutral.weightage=0.5
harit.model.negative.weightage=-0.3
harit.model.weightage.factor=100